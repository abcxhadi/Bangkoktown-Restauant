import React, { useRef } from "react";
import { motion, useInView } from "framer-motion";
import {
  Globe,
  Feather,
  Heart,
  Award,
  Star,
  Users,
  Trophy,
} from "lucide-react";

// Data for the "Why Choose Us" section
const features = [
  {
    icon: <Globe className="w-10 h-10 text-amber-400" />,
    title: "Authentic Flavors",
    description:
      "Our chefs use traditional recipes and the finest ingredients to create authentic Thai dishes.",
  },
  {
    icon: <Feather className="w-10 h-10 text-amber-400" />,
    title: "Exquisite Ambiance",
    description:
      "Experience the charm of Thailand with our elegant decor and warm, inviting atmosphere.",
  },
  {
    icon: <Heart className="w-10 h-10 text-amber-400" />,
    title: "Warm Hospitality",
    description:
      "Our friendly staff is dedicated to providing you with an exceptional dining experience.",
  },
];

const stats = [
  {
    icon: <Trophy className="w-8 h-8 text-amber-400" />,
    value: "Best Thai Restaurant",
    label: "UAE Food Awards 2024",
  },
  {
    icon: <Star className="w-8 h-8 text-amber-400" />,
    value: "4.8/5",
    label: "From 2,500+ Reviews",
  },
  {
    icon: <Users className="w-8 h-8 text-amber-400" />,
    value: "50,000+",
    label: "Happy Customers",
  },
  {
    icon: <Award className="w-8 h-8 text-amber-400" />,
    value: "Certificate of Excellence",
    label: "TripAdvisor",
  },
];

// Animation variants for Framer Motion
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.2,
    },
  },
};

const itemVariants = {
  hidden: { opacity: 0, y: 50, scale: 0.95 },
  visible: {
    opacity: 1,
    y: 0,
    scale: 1,
    transition: {
      type: "spring",
      damping: 15,
      stiffness: 100,
    },
  },
};

const statVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: {
    opacity: 1,
    y: 0,
    transition: {
      duration: 0.5,
    },
  },
};

export const PremiumWhyChooseUsSection = () => {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-100px" });

  return (
    <section
      ref={ref}
      className="py-24 bg-black text-white"
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Section Header */}
        <motion.div
          className="text-center mb-20"
          initial={{ opacity: 0, y: -50 }}
          animate={isInView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, ease: "easeOut" }}
        >
          <h2 className="text-4xl md:text-5xl lg:text-6xl font-bold netflix-heading">
            An Unforgettable Thai Experience
          </h2>
          <p className="mt-4 text-lg md:text-xl text-gray-300 max-w-3xl mx-auto netflix-body">
            We are committed to providing an unparalleled dining experience that
            combines the best of Thai culture, cuisine, and hospitality.
          </p>
        </motion.div>

        {/* Features Section */}
        <motion.div
          className="grid grid-cols-1 md:grid-cols-3 gap-12 mb-24"
          variants={containerVariants}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"}
        >
          {features.map((feature, index) => (
            <motion.div
              key={index}
              className="text-center p-8 bg-gray-900/50 rounded-2xl border border-gray-700/50 shadow-lg backdrop-blur-sm"
              variants={itemVariants}
              whileHover={{
                scale: 1.05,
                backgroundColor: "rgba(31, 41, 55, 0.7)",
                transition: { type: "spring", stiffness: 300 },
              }}
            >
              <div className="flex justify-center items-center mb-6">
                {feature.icon}
              </div>
              <h3 className="text-2xl font-bold text-white mb-3">
                {feature.title}
              </h3>
              <p className="text-gray-400">{feature.description}</p>
            </motion.div>
          ))}
        </motion.div>

        {/* Stats Section */}
        <motion.div
          className="grid grid-cols-2 md:grid-cols-4 gap-8 text-center"
          variants={containerVariants}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"
        >
          {stats.map((stat, index) => (
            <motion.div
              key={index}
              className="p-6 bg-gray-800/60 rounded-lg border border-gray-600/50"
              variants={statVariants}
            >
              <div className="flex justify-center items-center mb-3">
                {stat.icon}
              </div>
              <p className="text-xl md:text-2xl font-bold text-white">
                {stat.value}
              </p>
              <p className="text-sm text-gray-400">{stat.label}</p>
            </motion.div>
          ))}
        </motion.div>
      </div>
    </section>
  );
};