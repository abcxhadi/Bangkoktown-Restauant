import React, { useRef } from "react";
import { motion, useInView } from "framer-motion";

// Enhanced Premium Why Choose Us Section with Harvard UX Research best practices
export const PremiumWhyChooseUsSection = () => {
  const ref = useRef(null);
  const isVisible = useInView(ref, { once: true, margin: "-50px" });

  const features = [
    {
      icon: "üå∂Ô∏è",
      title: "100% Authentic",
      desc: "Traditional recipes passed down through generations, using imported spices and authentic cooking techniques straight from Thailand's kitchens.",
      highlight: "Generational Recipes",
      metric: "Since 1985",
    },
    {
      icon: "‚≠ê",
      title: "Premium Quality",
      desc: "Only the freshest ingredients, carefully sourced and prepared daily. Our commitment to quality means no compromises, ever.",
      highlight: "Fresh Daily",
      metric: "Zero Compromises",
    },
    {
      icon: "‚ù§Ô∏è",
      title: "Thai Hospitality",
      desc: "Experience the genuine warmth of Thai culture with our friendly service and welcoming family atmosphere that feels like home.",
      highlight: "Family Warmth",
      metric: "Like Home",
    },
  ];

  const awards = [
    {
      icon: "üèÜ",
      title: "Best Thai Restaurant",
      subtitle: "UAE Food Awards 2024",
      year: "2024",
    },
    {
      icon: "‚≠ê",
      title: "4.8/5 Rating",
      subtitle: "Google Reviews",
      count: "2,500+",
    },
    {
      icon: "üë•",
      title: "50,000+",
      subtitle: "Happy Customers",
      growth: "+15% YoY",
    },
    {
      icon: "üåü",
      title: "TripAdvisor",
      subtitle: "Certificate of Excellence",
      level: "Hall of Fame",
    },
  ];

  // Staggered animation variants
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.15,
        delayChildren: 0.1,
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 60, scale: 0.9 },
    visible: {
      opacity: 1,
      y: 0,
      scale: 1,
      transition: {
        type: "spring",
        damping: 25,
        stiffness: 120,
      },
    },
  };

  return (
    <section className="relative min-h-screen overflow-hidden" ref={ref}>
      {/* Enhanced Background with Multiple Layers */}
      <div className="absolute inset-0">
        {/* Primary background image */}
        <div
          className="absolute inset-0 bg-cover bg-center scale-105 transition-transform duration-[20s] ease-linear"
          style={{
            backgroundImage: `url(https://images.unsplash.com/photo-1559847844-d9b8b2413c8e?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80)`,
          }}
        />

        {/* Gradient overlays for depth */}
        <div className="absolute inset-0 bg-gradient-to-br from-black/85 via-black/75 to-black/90" />
        <div className="absolute inset-0 bg-gradient-to-t from-black/90 via-transparent to-black/60" />

        {/* Subtle pattern overlay */}
        <div
          className="absolute inset-0 opacity-5"
          style={{
            backgroundImage: `url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`,
          }}
        />
      </div>

      {/* Content Container with Better Spacing */}
      <div className="relative px-4 sm:px-6 lg:px-8 xl:px-12 py-16 sm:py-20 lg:py-24 xl:py-32">
        <div className="max-w-7xl mx-auto">
          {/* Enhanced Header Section */}
          <motion.div
            className="text-center mb-16 sm:mb-20 lg:mb-24"
            initial={{ opacity: 0, y: -30 }}
            animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: -30 }}
            transition={{ duration: 0.8, ease: "easeOut" }}
          >
            

            {/* Responsive Typography */}
            <h2 className="netflix-heading text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold text-white mb-6 sm:mb-8 leading-tight">
              Why choose Us? 
            </h2>

            <p className="netflix-body text-white/80 text-base sm:text-lg md:text-xl lg:text-2xl max-w-xs sm:max-w-lg md:max-w-2xl lg:max-w-4xl mx-auto leading-relaxed font-light">
              Discover what makes us the UAE's most beloved destination for
              authentic Thai cuisine and exceptional dining experiences.
            </p>
          </motion.div>

          {/* Enhanced Features Grid */}
          <motion.div
            className="grid grid-cols-1 md:grid-cols-3 gap-6 sm:gap-8 mb-16 sm:mb-20 lg:mb-24"
            variants={containerVariants}
            initial="hidden"
            animate={isVisible ? "visible" : "hidden"}
          >
            {features.map((item, index) => (
              <motion.div
                key={index}
                variants={itemVariants}
                whileHover={{
                  scale: 1.02,
                  y: -8,
                  transition: { type: "spring", stiffness: 400 },
                }}
                whileTap={{ scale: 0.98 }}
                className="group relative"
              >
                <div className="relative bg-black/30 backdrop-blur-xl p-6 sm:p-8 lg:p-10 rounded-2xl sm:rounded-3xl h-full border border-white/10 hover:border-white/25 transition-all duration-700 hover:bg-black/40 overflow-hidden">
                  {/* Card shine effect */}
                  <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-700">
                    <div className="absolute inset-0 bg-gradient-to-br from-white/5 via-transparent to-amber-300/5 rounded-2xl sm:rounded-3xl" />
                  </div>

                  <div className="relative text-center">
                    {/* Enhanced Icon */}
                    <div className="text-5xl sm:text-6xl lg:text-7xl mb-6 sm:mb-8 group-hover:scale-110 group-hover:rotate-6 transition-all duration-500 filter drop-shadow-lg">
                      {item.icon}
                    </div>

                    {/* Metric Badge */}
                    <div className="inline-block px-3 py-1 bg-gradient-to-r from-amber-400/20 to-red-500/20 rounded-full mb-4 sm:mb-6">
                      <span className="text-amber-300 text-xs sm:text-sm font-semibold">
                        {item.metric}
                      </span>
                    </div>

                    <h3 className="netflix-subheading text-xl sm:text-2xl lg:text-3xl font-bold text-white mb-4 sm:mb-6">
                      {item.title}
                    </h3>

                    <p className="netflix-body text-white/80 text-sm sm:text-base lg:text-lg leading-relaxed font-light mb-4">
                      {item.desc}
                    </p>

                    {/* Highlight */}
                    <div className="text-amber-300 text-xs sm:text-sm font-medium uppercase tracking-wide">
                      {item.highlight}
                    </div>
                  </div>
                </div>
              </motion.div>
            ))}
          </motion.div>

          

          <motion.div
            className="text-center"
            initial={{ opacity: 0, y: 50 }}
            animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
            transition={{ duration: 0.8, delay: 0.6 }}
          >
            <h3 className="netflix-heading text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-bold text-white mb-8 sm:mb-10 lg:mb-12">
              Awards &{" "}
              <span className="text-transparent bg-clip-text bg-gradient-to-r from-amber-300 to-red-500">
                Recognition
              </span>
            </h3>

            <motion.div
              className="grid grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6"
              variants={containerVariants}
              initial="hidden"
              animate={isVisible ? "visible" : "hidden"}
            >
              {awards.map((award, index) => (
                <motion.div
                  key={index}
                  variants={itemVariants}
                  whileHover={{
                    scale: 1.05,
                    rotate: [-1, 1, -1, 0],
                    transition: {
                      rotate: { repeat: 1, duration: 0.3 },
                      scale: { type: "spring", stiffness: 400 },
                    },
                  }}
                  whileTap={{ scale: 0.95 }}
                  className="group relative"
                >
                  <div className="relative bg-black/30 backdrop-blur-sm p-4 sm:p-6 lg:p-8 rounded-xl sm:rounded-2xl text-center border border-white/10 hover:border-amber-300/30 hover:bg-black/40 transition-all duration-500 overflow-hidden">
                    {/* Glow effect */}
                    <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
                      <div className="absolute inset-0 bg-gradient-to-br from-amber-300/10 via-transparent to-red-500/10 rounded-xl sm:rounded-2xl blur-xl" />
                    </div>

                    <div className="relative">
                      <div className="text-3xl sm:text-4xl lg:text-5xl mb-3 sm:mb-4 group-hover:scale-110 transition-transform duration-500 filter drop-shadow-lg">
                        {award.icon}
                      </div>

                      <h3 className="netflix-subheading text-sm sm:text-lg lg:text-xl font-bold mb-2 sm:mb-3 text-white">
                        {award.title}
                      </h3>

                      <p className="netflix-body text-xs sm:text-sm text-white/70 mb-2">
                        {award.subtitle}
                      </p>

                      {/* Additional metric */}
                      {(award.year ||
                        award.count ||
                        award.growth ||
                        award.level) && (
                        <div className="netflix-caption text-amber-300 text-xs font-medium">
                          {award.year ||
                            award.count ||
                            award.growth ||
                            award.level}
                        </div>
                      )}
                    </div>
                  </div>
                </motion.div>
              ))}
            </motion.div>
          </motion.div>

          {/* Call-to-Action Section */}
          <motion.div
            className="text-center mt-16 sm:mt-20 lg:mt-24"
            initial={{ opacity: 0, y: 30 }}
            animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
            transition={{ duration: 0.8, delay: 1 }}
          >
            <div className="inline-flex flex-col sm:flex-row gap-4 sm:gap-6">
              <motion.button
                className="px-6 sm:px-8 lg:px-10 py-3 sm:py-4 bg-gradient-to-r from-red-600 to-red-700 hover:from-red-500 hover:to-red-600 text-white font-semibold rounded-full transition-all duration-300 hover:shadow-2xl hover:shadow-red-500/25 hover:scale-105 text-sm sm:text-base"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                Reserve Your Table
              </motion.button>

              <motion.button
                className="px-6 sm:px-8 lg:px-10 py-3 sm:py-4 border border-white/20 hover:border-white/40 text-white font-medium rounded-full backdrop-blur-sm hover:bg-white/10 transition-all duration-300 text-sm sm:text-base"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                View Our Menu
              </motion.button>
            </div>
          </motion.div>
        </div>
      </div>
    </section>
  );
};
